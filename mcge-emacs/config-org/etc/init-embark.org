* init-embark.el
:PROPERTIES:
:HEADER-ARGS: :tangle (concat temporary-file-directory "init-embark.el") :lexical t
:END:

** Headers
#+begin_src emacs-lisp
;;; init-embark.el --- embark config  -*- lexical-binding: t; -*-

;;; Commentary:

  #+end_src

** Require
#+begin_src emacs-lisp
;;; Require:
(require 'dired)
(require 'embark)
(require 'embark-consult)

;;; Code:
  #+end_src

** Code
#+begin_src emacs-lisp
;; embark
(setq embark-quit-after-action nil)
(setq prefix-help-command #'embark-prefix-help-command)
(setq embark-indicators '(embark-minimal-indicator
                          embark-highlight-indicator
                          embark-isearch-highlight-indicator))
(setq embark-cycle-key ".")
(setq embark-help-key "?")

(setq embark-candidate-collectors
      (cl-substitute 'embark-sorted-minibuffer-candidates
                     'embark-minibuffer-candidates
                     embark-candidate-collectors))
(defun dired-open-externally (&optional arg)
  "Open ARG marked or current file in operating system's default application."
  (interactive "P")
  (dired-map-over-marks (embark-open-externally (dired-get-filename)) arg))

(add-to-list 'display-buffer-alist
             '("\\`\\*Embark Collect \\(Live\\|Completions\\)\\*"
               nil
               (window-parameters (mode-line-format . none))))

(add-hook 'embark-collect-mode #'consult-preview-at-point-mode)
#+end_src
** Ends
#+begin_src emacs-lisp
(provide 'init-embark)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init-embark.el ends here
  #+end_src
