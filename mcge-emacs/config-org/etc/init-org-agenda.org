* init-org-agenda.el
:PROPERTIES:
:HEADER-ARGS: :tangle (concat temporary-file-directory "init-org-agenda.el") :lexical t
:END:

** Headers
#+begin_src emacs-lisp
  ;;; init-org-agenda.el --- org-agenda config  -*- lexical-binding: t; -*-

  ;;; Commentary:

  #+end_src

** Require
#+begin_src emacs-lisp
  ;;; Require:
  (require 'org-agenda)
  (require 'cal-china-x)
  (require 'svg-tag-mode)

  ;;; Code :

  #+end_src

** Code
#+begin_src emacs-lisp
  (add-hook 'org-agenda-finalize-hook 'org-agenda-to-appt)

;; org agenda
(setq org-agenda-files (directory-files-recursively org-directory "\\.org$"))
;(setq org-agenda-diary-file (concat org-directory "/private/standard-diary"))
;; 设置 org 的日记文件
(setq org-agenda-diary-file (expand-file-name "diary.org" org-directory))
;(setq diary-file (concat org-directory "/private/standard-diary"))

(setq org-agenda-deadline-faces
        '((1.001 . error)
          (1.0 . org-warning)
          (0.5 . org-upcoming-deadline)
          (0.0 . org-upcoming-distant-deadline)))
(setq org-agenda-prefix-format '((agenda . "%t %s ")
                                 (todo   . " ")))
(setq org-agenda-clockreport-parameter-plist
      '(:link t :maxlevel 6 :fileskip0 t :compact t :narrow 60 :score 0))

;; 在日程视图的标签不继承
(setq org-agenda-use-tag-inheritance nil)

(setq org-agenda-hide-tags-regexp ".")

(setq org-agenda-span 7                      ; Agenda view 默认展示一周
;      org-agenda-start-on-weekday 0          ; 默认周日开始一周
      org-agenda-log-mode-items '(clock)
      ;org-agenda-include-all-todo t
      org-agenda-time-leading-zero t         ; Agenda View 时间显示为两位数
      org-agenda-use-time-grid nil           ; 关闭 Agenda view 时间分割线
      calendar-holidays nil
      org-agenda-include-diary t)

;; 日程模式的日期格式设置

(setq org-agenda-format-date 'org-agenda-format-date-aligned)

(defun org-agenda-format-date-aligned (date)
  "Format a DATE string for display in the daily/weekly agenda, or timeline.

This function makes sure that dates are aligned for easy reading."
  (require 'cal-iso)
  (let* ((dayname (aref cal-china-x-days
                        (calendar-day-of-week date)))
         (day (cadr date))
         (month (car date))
         (year (nth 2 date))
         (day-of-week (calendar-day-of-week date))
         (iso-week (org-days-to-iso-week
                    (calendar-absolute-from-gregorian date)))
         (cn-date (calendar-chinese-from-absolute (calendar-absolute-from-gregorian date)))
         (cn-month (cl-caddr cn-date))
         (cn-day (cl-cadddr cn-date))
         (cn-month-string (concat (aref cal-china-x-month-name
                                        (1- (floor cn-month)))
                                  (if (integerp cn-month)
                                      ""
                                    "（闰月）")))
         (cn-day-string (aref cal-china-x-day-name
                              (1- cn-day)))
         (extra (format " 农历%s%s%s%s"
                        (if (or (eq org-agenda-current-span 'day)
                                (= day-of-week 1)
                                (= cn-day 1))
                            cn-month-string
                          "")
                        (if (or (= day-of-week 1)
                                (= cn-day 1))
                            (if (integerp cn-month) "" "[闰]")
                          "")
                        cn-day-string
                        (if (or (= day-of-week 1)
                                (eq org-agenda-current-span 'day))
                            (format " 今年第%02d 周" iso-week)
                          "")
                        ))
         )
    (format "%04d-%02d-%02d 星期%s%s%s\n" year month
            day dayname extra (concat " 第" (format-time-string "%j") "天"))))

;; 显示时间线
(setq org-agenda-use-time-grid t)
;; 设置面包屑分隔符
;; (setq org-agenda-breadcrumbs-separator " ❱ ")
;; 设置时间线的当前时间指示串
(setq org-agenda-current-time-string "⏰------------now")
;; 时间线范围和颗粒度设置
(setq org-agenda-time-grid (quote ((daily today)
                                   (300
                                    600
                                    900
                                    1200
                                    1500
                                    1800
                                    2100
                                    2400)
                                   "......"
                                   "-----------------------------------------------------"
                                   )))
;; 日程视图的前缀设置
(setq org-agenda-prefix-format '((agenda . " %i %-25:c %5t %s")
                                 (todo   . " %i %-25:c ")
                                 (tags   . " %i %-25:c ")
                                 (search . " %i %-25:c ")))
;; 对于计划中的任务在视图里的显示
(setq org-agenda-scheduled-leaders
      '("计划 " "应在%02d 天前开始 "))
;; 对于截止日期的任务在视图里的显示
(setq org-agenda-deadline-leaders
      '("截止 " "还有%02d 天到期 " "已经过期%02d 天 "))

;; =====================
;; 自定义日程视图，分别显示 TODO，WIP，WIAT 中的任务
;; n 键显示自定义视图，p键纯文本视图，a键默认视图
;; =====================
(defvar my-org-custom-daily-agenda
  `((todo "TODO"
          ((org-agenda-block-separator nil)
           (org-agenda-overriding-header "所有待办任务\n")))
    (todo "WIP"
          ((org-agenda-block-separator nil)
           (org-agenda-overriding-header "\n 进行中的任务\n")))
    (todo "WAIT"
          ((org-agenda-block-separator nil)
           (org-agenda-overriding-header "\n 等待中的任务\n")))
    (agenda "" ((org-agenda-block-separator nil)
                (org-agenda-overriding-header "\n 今日日程\n"))))
  "Custom agenda for use in `org-agenda-custom-commands'.")
(setq org-agenda-custom-commands
      `(("n" "Daily agenda and top priority tasks"
         ,my-org-custom-daily-agenda)
        ("p" "Plain text daily agenda and top priorities"
         ,my-org-custom-daily-agenda
         ((org-agenda-with-colors nil)
          (org-agenda-prefix-format "%t %s")
          (org-agenda-current-time-string ,(car (last org-agenda-time-grid)))=
          (org-agenda-fontify-priorities nil)
          (org-agenda-remove-tags t))
         ("agenda.txt"))))

  ;; 时间戳格式设置，会影响到 `svg-tag' 等基于正则的设置
  ;; 这里设置完后是 <2022-12-24 星期六> 或 <2022-12-24 星期六 06:53>
  (setq system-time-locale "zh_CN.UTF-8")
  (setq org-time-stamp-formats '("<%Y-%m-%d %A>" . "<%Y-%m-%d %A %H:%M>"))
  ;; 不同日程类别间的间隔
  (setq org-cycle-separator-lines 2)

  ;; 日记插入精确时间戳
  (setq org-agenda-insert-diary-extract-time t)
  ;; 设置日程视图更加紧凑
  ;; (org-agenda-compact-blocks t)
  ;; 日程视图的块分隔符
  (setq org-agenda-block-separator ?─)
  ;; 日视图还是周视图，通过 v-d, v-w, v-m, v-y 切换视图，默认周视图
  (setq org-agenda-span 'day)
  ;; q 退出时删除 agenda 缓冲区
  (setq org-agenda-sticky t)
  ;; 是否包含直接日期
  (setq org-agenda-include-deadlines t)
  ;; 禁止日程启动画面
  (setq org-agenda-inhibit-startup t)
  ;; 显示每一天，不管有没有条目
  (setq org-agenda-show-all-dates t)
  ;; 时间不足位时前面加 0
  (setq org-agenda-time-leading-zero t)
  ;; 日程同时启动 log mode
  (setq org-agenda-start-with-log-mode t)
  ;; 日程同时启动任务时间记录报告模式
  (setq org-agenda-start-with-clockreport-mode t)
  ;; 截止的任务完成后不显示
  ;; (org-agenda-skip-deadline-if-done t)
  ;; 当计划的任务完成后不显示
  (setq org-agenda-skip-scheduled-if-done t)
  ;; 计划过期上限
  (setq org-scheduled-past-days 365)
  ;; 计划截止上限
  (setq org-deadline-past-days 365)
  ;; 计划中的任务不提醒截止时间
  (setq org-agenda-skip-deadline-prewarning-if-scheduled 1)
  (setq org-agenda-skip-scheduled-if-deadline-is-shown t)
  (setq org-agenda-skip-timestamp-if-deadline-is-shown t)
  ;; 设置工时记录报告格式
  (setq org-agenda-clockreport-parameter-plist
        '(:link t :maxlevel 5 :fileskip0 t :compact nil :narrow 80))
  (setq org-agenda-columns-add-appointments-to-effort-sum t)
  (setq org-agenda-restore-windows-after-quit t)
  (setq org-agenda-window-setup 'current-window)
  ;; 标签显示的位置，第 100 列往前右对齐
  (setq org-agenda-tags-column -100)
  ;; 从星期一开始作为一周第一天
  (setq org-agenda-start-on-weekday 1)
  ;; 是否使用 am/pm
  ;; (org-agenda-timegrid-use-ampm nil)
  ;; 搜索是不看时间
  (setq org-agenda-search-headline-for-time nil)
  ;; 提前 3 天截止日期到期告警
  (setq org-deadline-warning-days 3)

  ;; 设置当地坐标
  (setq calendar-latitude 30.4)
  (setq calendar-longitude 120.52) ;;经度

  ;; Sunrise and Sunset
  ;; 日出而作，日落而息
  (defun diary-sunrise ()
    "Sunrise."
    (let ((dss (diary-sunrise-sunset)))
      (with-temp-buffer
        (insert dss)
        (goto-char (point-min))
        (while (re-search-forward " ([^)]*)" nil t)
          (replace-match "" nil nil))
        (goto-char (point-min))
        (search-forward ",")
        (buffer-substring (point-min) (match-beginning 0)))))

  (defun diary-sunset ()
    "Sunset."
    (let ((dss (diary-sunrise-sunset))
          start end)
      (with-temp-buffer
        (insert dss)
        (goto-char (point-min))
        (while (re-search-forward " ([^)]*)" nil t)
          (replace-match "" nil nil))
        (goto-char (point-min))
        (search-forward ", ")
        (setq start (match-end 0))
        (search-forward " at")
        (setq end (match-beginning 0))
        (goto-char start)
        (capitalize-word 1)
        (buffer-substring start end))))

  ;; agenda show svg-tag
  (defun org-agenda-show-svg ()
    (let* ((case-fold-search nil)
           (keywords (mapcar #'svg-tag--build-keywords svg-tag--active-tags))
           (keyword (car keywords)))
      (while keyword
        (save-excursion
          (while (re-search-forward (nth 0 keyword) nil t)
            (overlay-put (make-overlay
                          (match-beginning 0) (match-end 0))
                         'display (nth 3 (eval (nth 2 keyword))))))
        (pop keywords)
        (setq keyword (car keywords)))))
  (add-hook 'org-agenda-finalize-hook #'org-agenda-show-svg)
#+end_src

** Ends
#+begin_src emacs-lisp

  (provide 'init-org-agenda)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;; init-org-agenda.el ends here
  #+end_src
