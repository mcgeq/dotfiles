* init-yasnippet.el
:PROPERTIES:
:HEADER-ARGS: :tangle (concat temporary-file-directory "init-yasnippet.el") :lexical t
:END:

** Headers
#+begin_src emacs-lisp
;;; init-yasnippet.el --- yasnippet config  -*- lexical-binding: t; -*-

;;; Commentary:

  #+end_src

** Require
#+begin_src emacs-lisp
;;; Require:
(require 'yasnippet)
(require 'yasnippet-snippets)

;;; Code:

  #+end_src

** Code
#+begin_src emacs-lisp
(add-hook 'prog-mode-hook
          (lambda ()
            (require 'yasnippet)
            ;; 定义从 Git 配置中获取用户名和电子邮件的函数
            (defun get-git-user-name ()
              "Get the Git configured user name."
              (interactive)
              (replace-regexp-in-string "\n$" "" (shell-command-to-string "git config --get user.name")))

            (defun get-git-user-email ()
              "Get the Git configured user email."
              (interactive)
              (replace-regexp-in-string "\n$" "" (shell-command-to-string "git config --get user.email")))

            ;; 添加多个自定义的片段目录
            (let ((custom-snippet-dirs
                   (list (concat mcgemacs-root-dir "/site-lisp/snippets")
                         (concat mcgemacs-root-dir "/site-lisp/extensions/snippets/yasnippet-snippet/snippets")
                         )))
              (dolist (dir custom-snippet-dirs)
                (add-to-list 'yas-snippet-dirs dir)))

            ;; 全局启用 yasnippet
            (yas-global-mode 1)

            ;; 禁用某些模式下的 yasnippet
            (dolist (hook '(term-mode-hook))
              (add-hook hook (lambda () (yas-minor-mode -1))))
            ))
#+end_src

** Ends
#+begin_src emacs-lisp

(provide 'init-yasnippet)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init-yasnippet.el ends here
  #+end_src
