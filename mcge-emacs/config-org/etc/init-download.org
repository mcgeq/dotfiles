* init-org-download.el
:PROPERTIES:
:HEADER-ARGS: :tangle (concat temporary-file-directory "init-org-download.el") :lexical t
:END:

** Headers
#+begin_src emacs-lisp
  ;;; init-org-download.el --- org-dowload config  -*- lexical-binding: t; -*-

  ;;; Commentary:

  #+end_src

** Require
#+begin_src emacs-lisp
  ;;; Require:
  (require 'org-download)

  ;;; Code :

  #+end_src

** Code
#+begin_src emacs-lisp
  (setq-default org-download-image-dir "./images")
  (setq org-download-screenshot-method "flameshot gui --raw >%s")
  (defun dummy-org-download-annotate-function (link)
    "LINK."
    (message "%s" link))

  (setq-default org-image-actual-width '(400)
        org-download-heading-lvl nil)
  (setq-default org-download-screenshot-file (expand-file-name "screenshot.png" temporary-file-directory))
  (setq org-download-annotate-function
        #'dummy-org-download-annotate-function)
  (setq org-download-method 'directory)
  (setq org-download-link-format "[[file:%s]]\n")

  ;; Drag-and-drop to `dired`
  (add-hook 'dired-mode-hook 'org-download-enable)
#+end_src

** Ends
#+begin_src emacs-lisp

  (provide 'init-org-download)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;; init-org-download.el ends here
  #+end_src
