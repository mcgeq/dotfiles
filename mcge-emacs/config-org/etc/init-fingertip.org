* init-fingertip.el
:PROPERTIES:
:HEADER-ARGS: :tangle (concat temporary-file-directory "init-fingertip.el") :lexical t
:END:

** Headers
#+begin_src emacs-lisp
;;; init-fingertip.el ---   -*- lexical-binding: t; -*-

;;; Commentary:

  #+end_src

** Require
#+begin_src emacs-lisp
;;; Require:
(require 'fingertip)

;;; Code:
  #+end_src

** Code
#+begin_src emacs-lisp

(dolist (hook (list
               'bash-ts-mode-hook
               'c++-mode-hook
               'c++-ts-mode-hook
               'c-mode-common-hook
               'c-mode-hook
               'c-ts-mode-hook
               'cmake-ts-mode-hook
               'coffee-mode-hook
               'conf-toml-mode-hook
               'css-mode-hook
               'css-ts-mode-hook
               'emacs-lisp-mode-hook
               'go-mode-hook
               'haskell-mode-hook
               'ielm-mode-hook
               'jade-mode-hook
               'java-mode-hook
               'js-mode-hook
               'js-ts-mode-hook
               'json-ts-mode-hook
               'kotlin-mode-hook
               'lisp-interaction-mode-hook
               'lisp-mode-hook
               'llvm-mode-hook
               'lua-mode-hook
               'makefile-gmake-mode-hook
               'markdown-ts-mode-hook
               'maxima-mode-hook
               'mojo-mode-hook
               'nim-mode-hook
               'php-mode-hook
               'php-ts-mode-hook
               'python-mode-hook
               'python-ts-mode-hook
               'qmake-mode-hook
               'qml-mode-hook
               'ruby-mode-hook
               'rust-mode-hook
               'rust-ts-mode-hook
               'sh-mode-hook
               'swift-mode-hook
               'toml-ts-mode-hook
               'typescript-mode-hook
               'typescript-ts-mode-hook
               'web-mode-hook
               'zig-mode-hook
               'fsharp-mode-hook
               'clojure-mode-hook
               'clojure-ts-mode-hook
               'cider-repl-mode-hook
               ))
  (add-hook hook #'(lambda ()
                     (when (or
                            (not (buffer-file-name))
                            (not (string-equal (file-name-extension (buffer-file-name)) "chat")))
                       (fingertip-mode 1)))))

#+end_src

** Ends
#+begin_src emacs-lisp
(provide 'init-fingertip)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init-fingertip.el ends here
  #+end_src
